; TRA.ini
; ------------------------------------------------------------------------------
; TestRunnerAgent Config File
;
; General Information:
; TestRunner is designed to act as a daemon process that launches scripts and
; processes remotely. Once launched TestRunner waits for another java
; application to send it a LaunchDescr (java object). Using information
; contained in the launch description TestRunner can launch either a script or
; another java application and pass input and output from the launched process 
; to the entity that sent the launch description. 
; ------------------------------------------------------------------------------

; ------------------------------------------------------------------------------
; See below for a description of the required variables and comments regarding
; the usage divided into sections.
; ------------------------------------------------------------------------------

;-------------TESTRUNNER APPLICATION ---------------------

TR_SERVER_URL=tcp://localhost:5001

;Uncomment the following to specify an agent name to identify
;this agent on the control broker. By default the hostname of 
;this machine will be used.
;
;TRA_NAME=<AgentName>
;
;If the application you launch writes to System.out and you wish to use an object ;communication channel, you can specify a dedicated port for this agent
TRA_PORT=5002
;
TESTRUNNER_CLASSPATH=../lib/testrunner.jar



;----------- JVM DEFINITIONS ------------
;TODO Add some here. See examples below.

;-------------JMS CLIENT CLASSPATHS-------------


;---------JMS SERVER/BROKER CLASSPATHS-------------


;-------------SONIC BROKER MANAGEMENT CLASSPATHS-------------



; ------------------------------------------------------------------------------
;                             FILE FORMATTING NOTES
; ------------------------------------------------------------------------------
; 1.) All classpath tags must end in _CLASSPATH.
; 2.) On Windows platforms, all backslashes in paths must be doubled (\\ not \).
; 3.) For Unix platforms, only a single forward slash in paths is required.
; 4.) Lines that start with a semicolon denote comments. Actual tags should not 
;     start with comments.
; 5.) Every tag should consist of solely uppercase characters with no spaces.
; 6.) Any tag may use at most one wildcard substitution character '*'. See 
;     section below regarding wildcard usage and explanation.
; ------------------------------------------------------------------------------

; ------------------------------------------------------------------------------
;                                WILDCARD USAGE
; ------------------------------------------------------------------------------
; Wildcards help minimize the number of entries need for each application. When 
; a LaunchDescr is read and a tag is looked for in this ini file, first a direct 
; match to the specified tag is looked for. If a direct match is not found, a 
; check will be done to see if it matches the wildcard tag. If so the wildcard 
; tag is used and each occurrence of * in it value is replaced by the characters 
; that the * replaces in the actual tag. The following example is illustrative:
;  ex) Suppose that you have:
;      SONIC_4.0_456_CLIENT_CLASSPATH=d:\\snc\\3.5_456\\sonic_client.jar
;      and 
;      SONIC_4.0_458_CLIENT_CLASSPATH=d:\\snc\\3.5_458\\sonic_client.jar
;
; you could use a wildcard to condense these two entries by replacing them with:
;      SONIC_*_CLIENT_CLASSPATH=d:\\sonic\\*\\sonic_client.jar
; 
; Now suppose a LaunchDescr is received with SONIC_4.0_456_CLIENT_CLASSPATH in 
; it. This file will first be checked for the tag 
; SONIC_4.0_456_CLIENT_CLASSPATH, if it is found then its value will be used. If 
; not, this tag would match SONIC_*_CLIENT_CLASSPATH (* = 4.0_456) and
;      d:\\sonic\\4.5_456\\sonic_client.jar would be used.
; ------------------------------------------------------------------------------

; ------------------------------------------------------------------------------
;                             END OF FILE FORMATTING NOTES
; ------------------------------------------------------------------------------


; ------------------------------------------------------------------------------
;                              TESTRUNNER
; ------------------------------------------------------------------------------
; 1.) TR_SERVER_URL - the control server for this test runner agent. When 
;     started the agent connects to this server and waits for commands from 
;     controllers.
; 2.) TRA_NAME identifies this test runner agent. It must be unique amongst 
;     other entities connected to the control server. The convention is to name 
;     the agent the same name as the machine it is running on plus a possible 
;     index (-1 etc) if more than one agent is to be run on a machine.
; 3.) TESTRUNNER_CLASSPATH should contain the jar file(s) required for a 
;     testrunner agent. (By convention, this classpath should not be included in
;     other classpath tags specified in this file.
;
;
; EXAMPLES:
;
; TR_SERVER_URL=survivor:2506
; TRA_NAME=aruba-1
;
; (Windows) TESTRUNNER_CLASSPATH=..\\lib\\testrunner.jar
; (UNIX)    TESTRUNNER_CLASSPATH=../lib/testrunner.jar
; ------------------------------------------------------------------------------
;                       End of TESTRUNNER
; ------------------------------------------------------------------------------




; ------------------------------------------------------------------------------
;                            Client and Broker JVM
; ------------------------------------------------------------------------------
; 1.) <JVM Vendor>_<JVM Version>_<JVM Date>_JAVAEXE
;     - used to specify the full path of the java executable for java apps
;       NOTE: Alternatively the <Server JVM Date> may specify a minor
;       version instead of a date.

; 2.) <JVM Vendor>_<JVM Version>_<JVM Date>_JAVALIB
;     - used to specify the full path of the java runtime library (e.g. rt.jar)
;       NOTE: Alternatively the <JVM Date> may specify a minor
;       version instead of a date.
;
;       NOTE: This variable is not required for JVM 1.3 and above or may be 
;       blank, if desired.
;
; EXAMPLES:
; (Windows)
; SUNJDK_1.3.*_JAVAEXE=d:\\jvms\\sunjdk1.3.*\\bin\\java.exe
; SUNJDK_1.3.*_JAVALIB=

; IBMJRE_1.1.8_*_JAVAEXE=d:\\jvms\\ibmjre1.1.8_*\\bin\\jre.exe
; IBMJRE_1.1.8_*_JAVALIB=d:\\jvms\\ibmjre1.1.8_*\\lib\\rt.jar

; IBMJDK_1.1.8_*_JAVAEXE=d:\\jvms\\ibmjdk1.1.8_*\\bin\\java.exe
; IBMJDK_1.1.8_*_JAVALIB=d:\\jvms\\ibmjdk1.1.8_*\\lib\\classes.zip
;
; (UNIX)
; SUNJDK_1.3.*_JAVAEXE=/usr2/jvms/sunjdk1.3.*/bin/java
; SUNJDK_1.3.*_JAVALIB=
;
; SUNJDK_1.3.1_00_JAVAEXE=/usr2/jvms/sunjdk1.3.1_00/bin/java
; SUNJDK_1.3.1_00_JAVALIB=
;
; ------------------------------------------------------------------------------
;                       End of Client and Broker JVM
; ------------------------------------------------------------------------------



; ------------------------------------------------------------------------------
;                                 JMS Client
; ------------------------------------------------------------------------------
; The following variable in this section are used to specify the jar files 
; required by the jms client of the specified <JMS_Provider> and 
; <JMS Version>.
;
; 1.) <JMS Provider>_<JMS Version>_<JMS Build>_CLIENT_CLASSPATH

; EXAMPLES:
; (Windows)
; SONIC_3.5_152_CLIENT_CLASSPATH=F:\\Sonicmq3.5\\SONICMQ3.5-152\\install_obf\\lib\\client.jar;...
SONIC_4.0UNOBF_*_CLIENT_CLASSPATH=F:\\SonicMQ4.0\\SONICMQ4.0-*\\install\\lib\sonic_Client.jar;...
;
SPIRITWAVE_4.3.1_0_CLIENT_CLASSPATH=d:\\sw4.3.1_0\\lib\\wave.jar;d:\\sw4.3.1_0\\lib\\jndi.jar;d:\\sw4.3.1_0\\lib\\providerutil.jar
;
; (UNIX)
; SONIC_3.5_*_CLIENT_CLASSPATH=/sonicrel/Sonicmq3.5/SONICMQ3.5-*/install_obf/lib/client.jar;...


; ------------------------------------------------------------------------------
;                             End of JMS Client
; ------------------------------------------------------------------------------



; ------------------------------------------------------------------------------
;                             JMS Server/Broker
; ------------------------------------------------------------------------------
; The following variables in this section are used to specify the jar files 
; required by the broker/server of the specified <JMS_Provider> and 
; <JMS Version>.
;
; 1.) <JMS Provider>_<JMS Version>_SERVER_DIR_*_CLASSPATH 
;     - used when a <Install Target Path> is specified. The 
;       <Install Target Path> is used as the replacement string.
;       Specifying a <Install Target Path> is recommended.
;
; 2.) <JMS Provider>_<JMS Version>_<JMS Build>_SERVER_CLASSPATH
;     - used when an <Install Target Path> is not specified.
;       NOTE: Also provided for compatibility with TestRunner 1.0
;
;Examples:
; (Windows)
;SONIC_3.5_SERVER_DIR_*_CLASSPATH=*\\lib\\broker.jar;*\\lib\\defdb_server.jar
;
; (UNIX)
; SONIC_4.0_SERVER_DIR_*_CLASSPATH=*/lib/broker.jar;/lib/defdb_server.jar
; ------------------------------------------------------------------------------
;                         End of JMS Server/Broker
; ------------------------------------------------------------------------------